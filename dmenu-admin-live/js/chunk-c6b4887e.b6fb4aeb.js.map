{"version":3,"sources":["webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts","webpack:///./src/views/categories/index.vue","webpack:///./src/utils/dialog/dialog.ts","webpack:///./src/views/categories/index.vue?b060","webpack:///./src/views/categories/index.vue?5e5f","webpack:///./src/views/categories/index.vue?cb45"],"names":["baseMixins","mixins","Colorable","RegistrableInject","VTreeviewNodeProps","activatable","Boolean","activeClass","type","String","default","color","disablePerNode","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","Function","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","includes","VTreeviewNode","extend","name","inject","treeview","props","level","Number","item","Object","parentIsDisabled","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","disabled","getObjectValueByPath","this","key","children","filter","child","isExcluded","text","scopedProps","leaf","selected","indeterminate","active","open","computedIcon","hasChildren","length","created","register","beforeDestroy","unregister","methods","checkChildren","Promise","resolve","then","updateOpen","emitOpen","genLabel","$scopedSlots","label","push","$createElement","slot","staticClass","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","VIcon","class","on","click","e","stopPropagation","genCheckbox","undefined","$nextTick","updateSelected","emitSelected","genLevel","createRange","map","genNode","unshift","setTextColor","updateActive","emitActive","genChild","scopedSlots","genChildrenWrapper","c","genTransition","VExpandTransition","render","h","attrs","filterTreeItem","search","textKey","toLocaleLowerCase","indexOf","filterTreeItems","idKey","childrenKey","excluded","match","i","add","RegistrableProvide","Themeable","provide","Array","dense","hoverable","items","multipleActive","openAll","returnObject","value","activeCache","Set","nodes","openCache","selectedCache","excludedItems","watch","handler","oldKeys","keys","k","newKeys","getKeys","diff","arrayDiff","forEach","oldSelectedCache","buildTree","deepEqual","deep","handleNodeCacheWatcher","getValue","mounted","$slots","consoleWarn","updateAll","parent","_a","oldNode","hasOwnProperty","vnode","node","calculateState","updateVnodeState","state","counts","reduce","emitNodeCache","event","cache","$emit","updateFn","emitFn","old","getDescendants","descendants","getParents","parents","isParent","delete","isForced","changed","Map","descendant","set","calculated","entries","has","options","bind","themeClasses","callback","$$v","expression","_vm","groups","_v","_s","_c","fn","index","$event","preventDefault","staticRenderFns","openDialog","Title","Msg","store","commit","dialog","Active","route","router","currentRoute","loading","actions","icon","clickAction","params","id","groupCode","toString","bus","elem","document","querySelector","focus","goToCreate","code","reset","console","log","getData","ListHierarchy","res","$on","component"],"mappings":"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","file":"js/chunk-c6b4887e.b6fb4aeb.js","sourcesContent":["// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  disablePerNode: Boolean,\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (!this.disablePerNode && (this.parentIsDisabled && this.selectionType === 'leaf'))\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          disablePerNode: this.disablePerNode,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    disabled: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren) ?? []\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (\n          this.selectionType !== 'independent' &&\n          parent !== null &&\n          !this.nodes.hasOwnProperty(key) &&\n          this.nodes.hasOwnProperty(parent)\n        ) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length && this.selectionType !== 'independent') {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, this.disabled || getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"py-12\"},[_c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"6\"}},[_c('v-text-field',{attrs:{\"label\":_vm.$t('search'),\"solo-inverted\":\"\",\"dense\":\"\",\"rounded\":\"\",\"hide-details\":\"\",\"clearable\":\"\",\"clear-icon\":\"mdi-close-circle-outline\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}}),(_vm.loading)?_c('v-skeleton-loader',{attrs:{\"type\":\"article\"}}):(_vm.groups.length == 0)?_c('v-alert',{staticClass:\"my-8 text-center\",attrs:{\"border\":\"left\",\"color\":\"red lighten-2\",\"dark\":\"\"}},[_vm._v(\" \"+_vm._s(_vm.$t('no_categories'))+\" \")]):_c('v-card',{staticClass:\"my-5\"},[_c('v-card-text',[_c('v-treeview',{attrs:{\"transition\":\"\",\"rounded\":\"\",\"search\":_vm.search,\"hoverable\":\"\",\"item-key\":\"name\",\"items\":_vm.groups},scopedSlots:_vm._u([{key:\"append\",fn:function({ item }){return _vm._l((_vm.actions),function(action,index){return _c('v-icon',{key:index,staticClass:\"mx-2\",on:{\"click\":function($event){$event.preventDefault();return action.clickAction(item)}}},[_vm._v(\" \"+_vm._s(action.icon)+\" \")])})}}])})],1)],1)],1),_c('v-col',{staticClass:\"no-padding\",attrs:{\"cols\":\"6\"}},[_c('router-view',{staticClass:\"no-padding\"})],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import store from \"@/store\";\nimport { dialogModel } from \"./dialogbar\";\nexport const openDialog = (Title: string, Msg: string) => {\n  store.commit(\"ui/stopDialog\");\n  let dialog: dialogModel = {\n    Active: true,\n    Title,\n    Msg,\n  };\n  store.commit(\"ui/setDialog\", dialog);\n};\n\nexport const closeSnack = (Title: string, Msg: string) => {\n  store.commit(\"ui/stopDialog\");\n};\n","\nimport router from \"@/router\";\nimport bus from \"@/bus\";\nimport { groupsHierarchyResponse } from \"@/models/group\";\nimport { ListHierarchy } from \"@/repositories/group\";\nimport { openDialog } from \"@/utils/dialog/dialog\";\n\nconst route = router.currentRoute;\nexport default {\n  data() {\n    return {\n      search: \"\",\n      loading:true,\n      actions: [\n        {\n          icon: \"mdi-square-edit-outline\",\n          clickAction: (item: groupsHierarchyResponse) => {\n            if (\n              route.name == \"categories-edit\" &&\n              route.params.id == item.groupCode.toString()\n            ) {\n              return;\n            }\n            bus.$emit(\"editAddFind\", item.groupCode);\n            router.push({\n              name: \"categories-edit\",\n              params: { id: item.groupCode.toString() },\n            });\n          },\n        },\n        {\n          icon: \"mdi-trash-can-outline\",\n          clickAction: (item: groupsHierarchyResponse) => {\n            openDialog(\"Warning\", \"mmms\");\n          },\n        },\n        {\n          icon: \"mdi-plus-circle-outline\",\n          clickAction: (item: groupsHierarchyResponse) => {\n          // bus.$emit('resetAppForm')\n          //  bus.$emit('changeFormFocus' , \"groupName\")\n          let elem = document.querySelector('.v-input.groupName input')\n          elem!.focus()\n          \n          this.goToCreate()\n         \n          bus.$emit('changeFormStateKey' , {key : \"parentCode\" , value : item.code , reset:true})\n          console.log(elem)\n          },\n        },\n      ],\n      groups: [] as groupsHierarchyResponse[],\n    };\n  },\n  methods: {\n    getData() {\n      this.loading = true\n      ListHierarchy().then((res: groupsHierarchyResponse[]) => {\n        if (res.length == 0 ){\n          this.goToCreate()\n        }\n        this.loading = false\n        this.groups = res;\n      });\n    },\n    goToCreate(){\n      if(router.currentRoute.name !== 'categories-create') router.push({name : \"categories-create\"});\n    }\n  },\n  mounted() {\n    this.getData();\n    bus.$on(\"getGroupsTree\", () => {\n      this.getData();\n    });\n  },\n};\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=736fbd36&\"\nimport script from \"./index.vue?vue&type=script&lang=ts&\"\nexport * from \"./index.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}